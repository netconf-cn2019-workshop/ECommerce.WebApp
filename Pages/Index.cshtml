@page
@Html.AntiForgeryToken()
@model ECommerce.WebApp.Pages.IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "/Pages/Shared/_Layout.cshtml";
}

<div class="container">

    <div class="jumbotron">
        <h1 class="display-4">Welcome to e-Commerce on Containers Cloud Native Application!</h1>
        <p class="lead">This is sample containerized application with a simple web interface backed by few microservices.</p>
        <hr class="my-4">
        <p>The aim of this sample is to show how to design, structure and implement .NET core microservices based application that leverages Docker and an orchestrator (Kubernetes or Service Fabric) for running containers.</p>
    </div>

    @if (Model.HasError)
    {
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">Error :(</h4>
            <p>Error has occured while processing the page. Please try again.</p>
            <hr>
            <p class="mb-0">@Model.ErrorMessage</p>
        </div>
    }

    @if (!Model.HasError)
    {
        <h1>Products</h1>

        <table class="table table-hover">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Name</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Price</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.Products)
                {
                    <tr>
                        <th scope="row">@item.ProductId</th>
                        <td>@item.Name</td>
                        <td>@item.Quantity</td>
                        <td>@string.Format("${0}", item.Price)</td>
                        <td>
                            <button class="btn btn-outline-warning buyButton" value="@item.ToJson()">
                                Buy
                            </button>
                        </td>
                    </tr>
                }

            </tbody>
        </table>

        <p class="small text-center">Data served by service <mark>@Model.HostName</mark> identified by <mark>@Model.ServiceId</mark></p>
    }

    <script src="~/js/Index.js" defer></script>

</div>